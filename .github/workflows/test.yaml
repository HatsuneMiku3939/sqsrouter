---
name: Test

env:
  GOVERSION: '1.24'
  DIRENV_FILE: '.envrc'


on:
  push:
    branches:
      - master
  pull_request:
    branches-ignore: []

jobs:
  gomod:
    name: Resolve go module dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export Environment Variables
        uses: HatsuneMiku3939/direnv-action@v1

      - name: Download go module
        run: go mod download

  test:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs:
      - gomod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export Environment Variables
        uses: HatsuneMiku3939/direnv-action@v1

      - name: Test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: make test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - gomod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export Environment Variables
        uses: HatsuneMiku3939/direnv-action@v1

      - name: Lint
        run: make lint
  e2e:
    name: E2E
    runs-on: ubuntu-latest
    needs:
      - gomod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export Environment Variables
        uses: HatsuneMiku3939/direnv-action@v1

      - name: E2E Test
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_SESSION_TOKEN: dummy
          AWS_DEFAULT_REGION: ap-northeast-1
          GOTOOLCHAIN: go1.24.5
        run: make e2e-test
  examples:
    name: Build Examples
    runs-on: ubuntu-latest
    needs:
      - gomod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export Environment Variables
        uses: HatsuneMiku3939/direnv-action@v1

      - name: Build all examples
        run: |
          set -euo pipefail
          shopt -s nullglob
          mapfile -t mains < <(find example -type f -name main.go 2>/dev/null || true)
          if [ ${#mains[@]} -eq 0 ]; then
            echo "No examples found under ./example"
            exit 0
          fi
          for m in "${mains[@]}"; do
            dir="$(dirname "$m")"
            echo "==> Building example in $dir"
            pushd "$dir" >/dev/null
            go mod tidy
            go build ./...
            popd >/dev/null
          done
